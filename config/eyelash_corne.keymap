#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        capslock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <17 23>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        question_mark {
            bindings = <&kp QMARK>;
            key-positions = <40 41>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&mt GRAVE ESC   &kp Q  &kp W  &kp E      &kp R             &kp T                               &kp UP                &kp Y        &kp U        &kp I          &kp O    &kp P     &kp BSPC
&lt 3 LEFT_ALT  &kp A  &kp S  &kp D      &kp F             &kp G                     &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &kp J        &kp K          &kp L    &kp SEMI  &kp ENTER
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C      &kp V             &kp B        &kp SPACE              &kp DOWN              &kp N        &kp M        &kp COMMA      &kp DOT  &kp FSLH  &lt 3 SQT
                              &lt 2 TAB  &kp LEFT_COMMAND  &lt 1 SPACE                                               &lt 1 MINUS  &lt 2 EQUAL  &mt RBKT LBKT
            >;
        };

        lower_layer {
            display-name = "NUMSYM";
            bindings = <
&kp GRAVE  &kp N1       &kp N2         &kp N3          &kp N4    &kp N5                           &msc SCRL_UP                  &kp N6     &kp N7    &kp N8    &kp N9    &kp N0    &kp BACKSPACE
&kp TILDE  &kp EXCL     &kp AT         &kp HASH        &kp DLLR  &kp PRCNT            &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &kp UP
&trans     &kp PAGE_UP  &kp PAGE_DOWN  &trans          &trans    &trans     &trans                &msc SCRL_DOWN                &trans     &trans    &trans    &kp LEFT  &kp DOWN  &kp RIGHT
                                       &kp LEFT_SHIFT  &trans    &kp SPACE                                                      &trans     &trans    &trans
            >;
        };

        raise_layer {
            display-name = "BTWIN";
            bindings = <
&trans      &trans        &kp LG(LS(N3))  &kp LG(LS(N4))  &kp LG(LS(N5))  &trans                                     &kp C_BRIGHTNESS_INC                   &kp LA(LG(F))          &kp LA(LG(C))      &trans  &trans            &trans                &kp DEL
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4            &kp C_VOLUME_DOWN  &kp C_MUTE            &kp C_VOLUME_UP  &kp LG(LA(SEMICOLON))  &kp LG(LA(SQT))    &trans  &trans            &kp LA(LG(UP_ARROW))  &trans
&trans      &trans        &trans          &trans          &trans          &trans        &trans                       &kp C_BRIGHTNESS_DEC                   &kp LA(LG(PERIOD))     &kp LA(LG(SLASH))  &trans  &kp LA(LG(LEFT))  &kp LA(LG(DOWN))      &kp LA(LG(RIGHT))
                                          &trans          &trans          &kp SPACE                                                                         &trans                 &trans             &trans
            >;
        };

        layer_3 {
            display-name = "FNRGB";
            bindings = <
&trans  &kp F1           &kp F2           &kp F3           &kp F4           &kp F5                                     &mmv MOVE_UP                     &kp F6           &kp F7           &kp F8           &kp F9           &kp F10  &kp F11
&trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &trans   &kp F12
&trans  &trans           &trans           &trans           &sys_reset       &bootloader      &trans                    &mmv MOVE_DOWN                   &mkp RCLK        &bootloader      &sys_reset       &trans           &trans   &trans
                                          &trans           &trans           &trans                                                                      &trans           &trans           &trans
            >;
        };
    };
};
